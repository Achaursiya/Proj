pipeline {
  agent any 
  tools {
    maven 'Maven'
  }
  stages {
    stage ('Initialize') {
      steps {
        sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
            ''' 
      }
    }
      stage ('DAST') {
      steps {
        sh 'python3 -m pip install archerysec-cli --force mkdir /tmp/archerysec-scans-report archerysec-cli -h http://192.168.80.133:8000 -t boqgyCsRRxJwazvmS0wXiVje8Z31GaLGJ9btdu0k4gNe_FI77umQ2sBGo8PY5rko --cicd_id=860a4bc7-f893-468d-ae25-1d9b0a6ff1b2 --project=27e8ac41-7ee7-465c-ad9b-889dc814a9f8 --dependency-check --report_path=/tmp/archerysec-scans-report '
       
      }
    }
    stage ('Check-Git-Secrets') {
      steps {
        sh 'rm trufflehog || true'
        sh 'docker run gesellix/trufflehog --json https://github.com/Achaursiya/Proj.git > trufflehog'
        sh 'jq . trufflehog'
      }
    }
    stage ('Source Composition Analysis') {
      steps {
         sh 'rm owasp* || true'
         sh 'wget "https://raw.githubusercontent.com/Achaursiya/Proj/main/owasp-dependency-check.sh" '
         sh 'chmod +x owasp-dependency-check.sh'
         sh 'bash owasp-dependency-check.sh'
         sh 'pwd'
         sh 'cat $(pwd)/odc-reports/dependency-check-report.xml' 
      }
    }
    
     stage ('SAST') {
      steps {
        withSonarQubeEnv('sonar') {
          sh 'mvn sonar:sonar -Dsonar.login=1835fc93756ddc0d5df82c959a94bddd94bc0cad'
          sh 'cat target/sonar/report-task.txt '
        }
      }
    }
     stage ('Build') {
      steps {
      sh 'mvn clean package'
       }
    }
    stage ('Deploy-To-Tomcat') {
            steps {
           sshagent(['192.168.80.131']) {
                sh 'scp -o StrictHostKeyChecking=no target/*.war ashish@192.168.80.131:/home/ashish/prod/apache-tomcat-9.0.60/webapps/webapp.war'
              }      
           }       
    }
    stage ('DAST') {
      steps {
        sshagent(['192.168.80.129']) {
         sh 'ssh -o  StrictHostKeyChecking=no shuhari@192.168.80.129 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://192.168.80.131:8080/webapp/" || true '
        }
      }
    }
}
}
